package Archive.FunctionalProgramming.KataEx.Ex4;

import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        pseudoRandomStream(57).limit(5).forEach(System.out::println);
    }

    public static IntStream pseudoRandomStream(int seed) {
        return IntStream.iterate(seed, (i) -> (int) Math.pow(i, 2) / 10 % 1000);
    }
}

   /* Напишите метод, возвращающий стрим псевдослучайных целых чисел. Алгоритм генерации чисел следующий:

Берется какое-то начальное неотрицательное число (оно будет передаваться в ваш метод проверяющей системой).
Первый элемент последовательности устанавливается равным этому числу.
Следующие элементы вычисляются по рекуррентной формуле Rn+1=mid(Rn^2), где mid — это функция,
выделяющая второй, третий и четвертый разряд переданного числа. Например, mid(123456)=345.
Пример ввода: 13

Пример вывода: 13, 16, 25, 62, 384, 745, 502, 200, 0, ... (дальше бесконечное количество нулей)

    */

//        (x*x) / 10 % 1000- формула для получения 2, 3, 4 разряда  int x
//        все пишем в одну строчку ретурн......
//        25 * 25 = 625; 62 * 62 = 3844; 384 * 384 = 147456;
